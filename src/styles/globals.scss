@import './reset.scss';

:root {
  @each $keyColor, $valueColor in $colors-theme {
    --color-#{$keyColor}: #{$valueColor};
  }
  --app-header-height: 72px;
}

::-webkit-scrollbar {
  width: 10px;
  height: 10px;
  background-color: var(--color-bg);
  &-thumb {
    border-radius: 8px;
    @include transition;
    background-color: var(--color-secondary);
    &:active {
      background-color: var(--color-primary);
    }
  }
}

html,
body {
  background-color: var(--color-bg);
  color: var(--color-bg-contrast);
  // cursor: none;
}

$duration: 4s;
$size: 2rem;
$width: 0.5rem;

.loader {
  position: relative;
  width: 5rem;
  height: 5rem;
  animation: loaderSpin $duration * 4 infinite linear;

  @keyframes loaderSpin {
    to {
      transform: rotate(360deg);
    }
  }

  & > i {
    position: absolute;
    left: 50%;
    top: 50%;
    width: $width;
    height: $width;
    background-color: hsl(var(--hue, 0), 75%, 75%);
    border-radius: 50%;
    transform: rotateZ(var(--rz, 0)) translateY(50%);
    animation: iMove $duration var(--delay, 0s) infinite ease-in-out;

    @keyframes iMove {
      0% {
        transform: rotateZ(var(--rz, 0)) translateY($size) translate(0, 0) scale(0);
      }
      2% {
        transform: rotateZ(var(--rz, 0)) translateY($size) translate(0, 0) scale(1.25);
      }
      20% {
        transform: rotateZ(var(--rz, 0)) translateY($size) translate(0, 0) scale(1.25);
      }
      90%,
      100% {
        transform: rotateZ(var(--rz, 0)) translateY($size) translate(var(--tx, 0), var(--ty, 0)) scale(0);
      }
    }

    @for $i from 0 to 72 {
      &:nth-child(#{$i + 1}) {
        --rz: #{$i * 5}deg;
        --delay: #{$duration / 72 * $i - $duration};
        --tx: #{random(1000) / 250}em;
        --ty: #{random(1000) / 125 - 2.5}em;
        --hue: #{$i * 5};
      }
    }
  }
}
